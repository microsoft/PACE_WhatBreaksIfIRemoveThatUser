<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStripMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbResetTool.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIFSURBVDhPpZLtS1NhGMbPPxJmmlYSgqHiKzGU1EDxg4iK
        YKyG2WBogqMYJQOtCEVRFBGdTBCJfRnkS4VaaWNT5sqx1BUxRXxDHYxAJLvkusEeBaPAB+5z4Jzn+t3X
        /aLhnEfjo8m+dCoa+7/C3O2Hqe0zDC+8KG+cRZHZhdzaaWTVTCLDMIY0vfM04Nfh77/G/sEhwpEDbO3t
        I7TxE8urEVy99fT/AL5gWDLrTB/hnF4XsW0khCu5ln8DmJliT2AXrcNBsU1gj/MH4nMeKwBrPktM28xM
        cX79DFKrHHD5d9D26hvicx4pABt2lpg10zYzU0zr7+e3xXGcrkEB2O2TNec9nJFwB3alZn5jZorfeDZh
        6Q3g8s06BeCoKF4MRURoH1+BY2oNCbeb0TIclIYxOhzf8frTOuo7FxCbbVIAzpni0iceEc8vhzEwGkJD
        lx83ymxifejdKjRNk/8PWnyIyTQqAJek0jqHwfEVscu31baIu8+90sTE4nY025dQ2/5FIPpnXlzKuK8A
        HBUzHot52djqQ6HZhfR7IwK4mKpHtvEDMqvfCiQ6zaAAXM8x94aIWTNrLLG4kVUzgaTSPlzLtyJOZxbb
        1wtfyg4Q+AfA3aZlButjSfxGcUJBk4g5tuP3haQKRKXcUQDOmbvNTpPOJeFFjordZmbWTNvMTHFUcpUC
        nOccAdABIDXXE1nzAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="tsbHelp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAARDSURBVHhe7dxLbuNGFEZhAUnGBryDyJ565NcaOqvIrno7
        yTRB1pSAHciAPokUq+oWSVXxAGfSrvvfB8fqw2Fnp5Bvr6+v/87xcDj8ZvFOPr974CiHbJvtXMHDLaVz
        dI3HWVvn6wYPsTWdt1lcfOs6fzO46L3pPneLi9277nc3uEhruu+mcfhWde8t8rNDt+6ws0fYBA7am95j
        VRyuV73LKjhU73qfRXGY3f/1TovgELvneq+q2Hz3ut6tCjbdndb7hWKz3Xl6xxAeHh6+22h3no+Pj9+9
        ZzE22U3TexZh+FzNGXh+fv7Ld1vV2Qfe3t4u3s3VrCwMTdEs8f1WdE7xfYpmJWNgimaNYd1aOtcY1qVo
        VhKGpWreLayf8ng8/mH9ieFvvp/S+ltYn6p5szgej/8YlKJ5KUTlXCMq231TfHp6+tu8mxiSqnmt4b6p
        mjeJxTma2Rrum6OZo1iYo5mt4b45mnkVi3I1tzXcN1dzL7AgV3Nbw31zNfcCC3I1tzXcN1dzz/Bxqea3
        gnuWav4XPizV/FZwz1LN/8HHx8fFw1Lt0QruWern5+flrXxUqvmt4b6lmh/awOxWce8Sza4b3ijuXeIy
        wR3g/iXWDe0E9y8xPPRs0o7wDrnWC+wM75BrvcDO8A65xod1jPfINS6oc7xHrnFBneM9co0L6hzvkWtc
        UOd4j1zjgjrHe+QaF9Q53iPXuKDO8R65xgV1jvfINS6oc7xHrmFB7+/v3X6UYXfvkWvYBxl00F7wDiXG
        hnWKdygxNqxTvEOJw2/+/vQfc3XQXvAOuQ7fIjRw0GFbx/1LrBvaCe5fYpXQwbOJG8a9S60f3DjuXepX
        cMmP4cc8m7xB3LfU4RtUbXAW3iDuW6r54Q0G7dEK7hmhPao0GbTPveN+UdrnBz6K0j73intFaZ8vfBip
        ve6MX9wnUpt94cMa2nPrOH8N7XmGj2tp363hvLW07wUWXNOageF3cr6bozlr43y1tf9VLLqmNSd8l6p5
        tbH/kjrLKBaOad0J35Vqfi7mrq3zTWLxmNad8F2u5pZi/lo6100MmNLaE75L1bwo7LOGzjQLQ6a09oTv
        UjQrCvssrfPMxqBbWj/gm7maE439ltRZkjBsypeXl6vNfDdHM6Kx31I6RxaGTmntCd/d0vpo7LeEzpBN
        yn9MY634Xg+Hw6/W1MC+tR1u6AxF2GBKa7eIM9fW/iHYZEzrtogz19TeodhsTOu2hvPW0r5VsOmY1m0J
        Z62hPWvyk83HtHArOGe0w43sWR2HmNLatXG+SO21KA4TpX2isV+U9lkFh4rQHtHYL0J7rIrDlWp+NPYr
        1fxN4JAlmh2N/Uo0e1M4bK7mRmO/XM3dLA6eqnnR2C9V8+4Cl0jRrGjsl6JZd4cLzdGMaOw3RzPuHhec
        0tpo7Deltc3hwte0Jhr7XdOa5vEASx/Cvkv33zRrHWOtvjt3wn+UyMcQZzEfDgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="lblWarning.Text" xml:space="preserve">
    <value>This tool will check for any Flows or ConnectionReferences owned by a specific user.
Click "Select Environments" first to load all the environments you currently have access to and either select some of them or all.
Then, enter the email adress of the user you want to check for and press Start.


Attention: This is an early version. 
Use at your own risk and always test on a non-production system first.


Remember to use accounts with admin privileges to enable 
impersonation.

</value>
  </data>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>147, 17</value>
  </metadata>
</root>